---
import BlogPost from "../../components/BlogPost.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {  /* La función getStaticPaths devuelve un array de rutas de páginas, y todas las páginas en esas rutas usarán la misma plantilla definida en el fichero. */
    
    const allPosts = await Astro.glob('../posts/*.md') /* añado props a la función getStaticPaths() para que los datos de todas las entradas del blog estén disponibles para cada ruta de página. */
    
    const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())] /* Recorro cada entrada Markdown, una a una, y combino cada array de etiquetas en un único array más grande. A continuación, creo un nuevo Set a partir de todas las etiquetas individuales que se han encontrado (para ignorar los valores repetidos). Finalmente, convierto ese conjunto en un array (sin duplicaciones), que se puede usar para mostrar una lista de etiquetas en la página. */

  /*   return [
        { params: { tag: " astro" }, props: {posts: allPosts} },  doy a cada ruta del array los props 
        { params: { tag: " éxitos" }, props: {posts: allPosts}  },
        { params: { tag: " comunidad" }, props: {posts: allPosts}  },
        { params: { tag: " bloguear" }, props: {posts: allPosts}  },
        { params: { tag: " contratiempos" }, props: {posts: allPosts}  },
        { params: { tag: " aprender en público" }, props: {posts: allPosts}  },
    ]; */

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag))
        return {
            params: { tag },
            props: { posts: filteredPosts }
        }
    })
} 

const { tag } = Astro.params;
const { posts } = Astro.props; /* hago que los props estén disponibles para la plantilla de componentes fuera de la función. */

---

<BaseLayout pageTitle={tag}>
    <p>
        Entradas etiquetadas con {tag}
    </p>
    <ul> {/* actualizo la plantilla HTML para mostrar una lista de cada entrada del blog que contenga la etiqueta propia de la página. */}

        {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)} <!-- refactorizo para usar tu componente <BlogPost /> en su lugar -->
    </ul>
</BaseLayout>

<!-- Si necesitas información para construir las rutas de la página, 
    escríbela dentro de getStaticPaths().
Para recibir información en la plantilla HTML de una ruta de página, 
escríbela fuera de getStaticPaths(). -->

<!-- Una función getStaticPaths siempre debe devolver 
    una lista de objetos que contengan params (cómo llamar a cada ruta de página) 
    y opcionalmente cualquier props (datos que quieras pasar a esas páginas). 
    Anteriormente, definiste cada nombre de etiqueta que sabías que se usaba en tu blog 
    y pasaste toda la lista de entradas como props a cada página.
Ahora, generas esta lista de objetos automáticamente utilizando tu array uniqueTags 
para definir cada parámetro.
Y, ahora la lista de todas las publicaciones del blog es filtrada antes 
de ser enviada a cada página como props. Asegúrate de eliminar la línea de código 
anterior que filtra las publicaciones, y actualiza tu plantilla HTML para usar posts 
en lugar de filteredPosts. -->